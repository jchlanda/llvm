; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --check-globals all --include-generated-funcs --version 5
; RUN: opt -bugpoint-enable-legacy-pm -globaloffset %s -S -o - | FileCheck %s

; Test that debug reports are removed from cloned functions.

target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"
target triple = "nvptx64-nvidia-cuda"

%"class.sycl::_V1::range" = type { %"class.sycl::_V1::detail::array" }
%"class.sycl::_V1::detail::array" = type { [2 x i64] }

define void @main_func() !dbg !5 {
entry:
  %this1 = load ptr, ptr null, align 8
    #dbg_declare(ptr null, !12, !DIExpression(), !18)
  %call = load %"class.sycl::_V1::range", ptr null, align 8, !dbg !19
  %call3 = call %"class.sycl::_V1::range" @_ZN7__spirv22initGlobalInvocationIdILi2EN4sycl3_V12idILi2EEEEET0_v()
  ret void
}

define %"class.sycl::_V1::range" @_ZN7__spirv22initGlobalInvocationIdILi2EN4sycl3_V12idILi2EEEEET0_v() {
entry:
  %call = call %"class.sycl::_V1::range" @_ZN7__spirv29InitSizesSTGlobalInvocationIdILi2EN4sycl3_V12idILi2EEEE8initSizeEv()
  ret %"class.sycl::_V1::range" zeroinitializer
}

define %"class.sycl::_V1::range" @_ZN7__spirv29InitSizesSTGlobalInvocationIdILi2EN4sycl3_V12idILi2EEEE8initSizeEv() {
entry:
  %call = call i64 @_ZN7__spirv21getGlobalInvocationIdILi1EEEmv()
  ret %"class.sycl::_V1::range" zeroinitializer
}

define i64 @_ZN7__spirv21getGlobalInvocationIdILi1EEEmv() {
entry:
  %0 = call ptr @llvm.nvvm.implicit.offset()
  ret i64 0
}

; Function Attrs: nounwind speculatable memory(none)
declare ptr @llvm.nvvm.implicit.offset() #0

attributes #0 = { nounwind speculatable memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3, !4}

!0 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !1, producer: "clang version 0.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !2, globals: !2, imports: !2, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "mrm-219/FULL_local_dilatation.cpp", directory: "llvm/tickets/DISubprogram")
!2 = !{}
!3 = !{i32 2, !"Debug Info Version", i32 3}
!4 = !{i32 1, !"sycl-device", i32 1}
!5 = distinct !DISubprogram(name: "parallel_for_work_item<(lambda at mrm-219/FULL_local_dilatation.cpp:141:44)>", linkageName: "main_func", scope: !7, file: !6, line: 180, type: !10, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, templateParams: !2, declaration: !11, retainedNodes: !2)
!6 = !DIFile(filename: "build/bin/../include/sycl/group.hpp", directory: "llvm")
!7 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "group<2>", scope: !8, file: !6, line: 103, size: 512, flags: DIFlagTypePassByValue | DIFlagNonTrivial, elements: !2, templateParams: !2, identifier: "_ZTSN4sycl3_V15groupILi2EEE")
!8 = !DINamespace(name: "_V1", scope: !9, exportSymbols: true)
!9 = !DINamespace(name: "sycl", scope: null)
!10 = distinct !DISubroutineType(types: !2)
!11 = !DISubprogram(name: "parallel_for_work_item<(lambda at mrm-219/FULL_local_dilatation.cpp:141:44)>", linkageName: "main_func", scope: !7, file: !6, line: 180, type: !10, scopeLine: 180, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0, templateParams: !2)
!12 = !DILocalVariable(name: "GlobalSize", scope: !5, file: !6, line: 185, type: !13)
!13 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "range<2>", scope: !8, file: !14, line: 26, size: 128, flags: DIFlagTypePassByValue | DIFlagNonTrivial, elements: !2, templateParams: !15, identifier: "_ZTSN4sycl3_V15rangeILi2EEE")
!14 = !DIFile(filename: "build/bin/../include/sycl/range.hpp", directory: "llvm")
!15 = !{!16}
!16 = !DITemplateValueParameter(name: "Dimensions", type: !17, value: i32 2)
!17 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!18 = !DILocation(line: 185, column: 23, scope: !5)
!19 = !DILocation(line: 186, column: 9, scope: !5)
; CHECK-LABEL: define void @main_func(
; CHECK-SAME: ) !dbg [[DBG5:![0-9]+]] {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    [[THIS1:%.*]] = load ptr, ptr null, align 8
; CHECK-NEXT:      #dbg_declare(ptr null, [[META12:![0-9]+]], !DIExpression(), [[META18:![0-9]+]])
; CHECK-NEXT:    [[CALL:%.*]] = load %"class.sycl::_V1::range", ptr null, align 8, !dbg [[DBG19:![0-9]+]]
; CHECK-NEXT:    [[CALL3:%.*]] = call %"class.sycl::_V1::range" @_ZN7__spirv22initGlobalInvocationIdILi2EN4sycl3_V12idILi2EEEEET0_v()
; CHECK-NEXT:    ret void
;
;
; CHECK-LABEL: define void @main_func_with_offset(
; CHECK-SAME: ptr [[TMP0:%.*]]) !dbg [[DBG20:![0-9]+]] {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    [[THIS1:%.*]] = load ptr, ptr null, align 8
; CHECK-NEXT:    [[CALL:%.*]] = load %"class.sycl::_V1::range", ptr null, align 8, !dbg [[DBG21:![0-9]+]]
; CHECK-NEXT:    [[CALL3:%.*]] = call %"class.sycl::_V1::range" @_ZN7__spirv22initGlobalInvocationIdILi2EN4sycl3_V12idILi2EEEEET0_v_with_offset(ptr [[TMP0]])
; CHECK-NEXT:    ret void
;
;
; CHECK-LABEL: define %"class.sycl::_V1::range" @_ZN7__spirv22initGlobalInvocationIdILi2EN4sycl3_V12idILi2EEEEET0_v() {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    [[CALL:%.*]] = call %"class.sycl::_V1::range" @_ZN7__spirv29InitSizesSTGlobalInvocationIdILi2EN4sycl3_V12idILi2EEEE8initSizeEv()
; CHECK-NEXT:    ret %"class.sycl::_V1::range" zeroinitializer
;
;
; CHECK-LABEL: define %"class.sycl::_V1::range" @_ZN7__spirv22initGlobalInvocationIdILi2EN4sycl3_V12idILi2EEEEET0_v_with_offset(
; CHECK-SAME: ptr [[TMP0:%.*]]) {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    [[CALL:%.*]] = call %"class.sycl::_V1::range" @_ZN7__spirv29InitSizesSTGlobalInvocationIdILi2EN4sycl3_V12idILi2EEEE8initSizeEv_with_offset(ptr [[TMP0]])
; CHECK-NEXT:    ret %"class.sycl::_V1::range" zeroinitializer
;
;
; CHECK-LABEL: define %"class.sycl::_V1::range" @_ZN7__spirv29InitSizesSTGlobalInvocationIdILi2EN4sycl3_V12idILi2EEEE8initSizeEv() {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    [[CALL:%.*]] = call i64 @_ZN7__spirv21getGlobalInvocationIdILi1EEEmv()
; CHECK-NEXT:    ret %"class.sycl::_V1::range" zeroinitializer
;
;
; CHECK-LABEL: define %"class.sycl::_V1::range" @_ZN7__spirv29InitSizesSTGlobalInvocationIdILi2EN4sycl3_V12idILi2EEEE8initSizeEv_with_offset(
; CHECK-SAME: ptr [[TMP0:%.*]]) {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    [[CALL:%.*]] = call i64 @_ZN7__spirv21getGlobalInvocationIdILi1EEEmv_with_offset(ptr [[TMP0]])
; CHECK-NEXT:    ret %"class.sycl::_V1::range" zeroinitializer
;
;
; CHECK-LABEL: define i64 @_ZN7__spirv21getGlobalInvocationIdILi1EEEmv() {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    ret i64 0
;
;
; CHECK-LABEL: define i64 @_ZN7__spirv21getGlobalInvocationIdILi1EEEmv_with_offset(
; CHECK-SAME: ptr [[TMP0:%.*]]) {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    ret i64 0
;
;.
; CHECK: [[META0:![0-9]+]] = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: [[META1:![0-9]+]], producer: "{{.*}}clang version {{.*}}", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: [[META2:![0-9]+]], retainedTypes: [[META2]], globals: [[META2]], imports: [[META2]], splitDebugInlining: false, nameTableKind: None)
; CHECK: [[META1]] = !DIFile(filename: "mrm-219/FULL_local_dilatation.cpp", directory: {{.*}})
; CHECK: [[META2]] = !{}
; CHECK: [[META3:![0-9]+]] = !{i32 2, !"Debug Info Version", i32 3}
; CHECK: [[META4:![0-9]+]] = !{i32 1, !"sycl-device", i32 1}
; CHECK: [[DBG5]] = distinct !DISubprogram(name: "parallel_for_work_item<(lambda at mrm-219/FULL_local_dilatation.cpp:141:44)>", linkageName: "main_func", scope: [[META7:![0-9]+]], file: [[META6:![0-9]+]], line: 180, type: [[META10:![0-9]+]], scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: [[META0]], templateParams: [[META2]], declaration: [[META11:![0-9]+]], retainedNodes: [[META2]])
; CHECK: [[META6]] = !DIFile(filename: "build/bin/../include/sycl/group.hpp", directory: {{.*}})
; CHECK: [[META7]] = distinct !DICompositeType(tag: DW_TAG_class_type, name: "group<2>", scope: [[META8:![0-9]+]], file: [[META6]], line: 103, size: 512, flags: DIFlagTypePassByValue | DIFlagNonTrivial, elements: [[META2]], templateParams: [[META2]], identifier: "_ZTSN4sycl3_V15groupILi2EEE")
; CHECK: [[META8]] = !DINamespace(name: "_V1", scope: [[META9:![0-9]+]], exportSymbols: true)
; CHECK: [[META9]] = !DINamespace(name: "sycl", scope: null)
; CHECK: [[META10]] = distinct !DISubroutineType(types: [[META2]])
; CHECK: [[META11]] = !DISubprogram(name: "parallel_for_work_item<(lambda at mrm-219/FULL_local_dilatation.cpp:141:44)>", linkageName: "main_func", scope: [[META7]], file: [[META6]], line: 180, type: [[META10]], scopeLine: 180, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0, templateParams: [[META2]])
; CHECK: [[META12]] = !DILocalVariable(name: "GlobalSize", scope: [[DBG5]], file: [[META6]], line: 185, type: [[META13:![0-9]+]])
; CHECK: [[META13]] = distinct !DICompositeType(tag: DW_TAG_class_type, name: "range<2>", scope: [[META8]], file: [[META14:![0-9]+]], line: 26, size: 128, flags: DIFlagTypePassByValue | DIFlagNonTrivial, elements: [[META2]], templateParams: [[META15:![0-9]+]], identifier: "_ZTSN4sycl3_V15rangeILi2EEE")
; CHECK: [[META14]] = !DIFile(filename: "build/bin/../include/sycl/range.hpp", directory: {{.*}})
; CHECK: [[META15]] = !{[[META16:![0-9]+]]}
; CHECK: [[META16]] = !DITemplateValueParameter(name: "Dimensions", type: [[META17:![0-9]+]], value: i32 2)
; CHECK: [[META17]] = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
; CHECK: [[META18]] = !DILocation(line: 185, column: 23, scope: [[DBG5]])
; CHECK: [[DBG19]] = !DILocation(line: 186, column: 9, scope: [[DBG5]])
; CHECK: [[DBG20]] = distinct !DISubprogram(name: "parallel_for_work_item<(lambda at mrm-219/FULL_local_dilatation.cpp:141:44)>_with_offset", linkageName: "main_func_with_offset", scope: [[META6]], file: [[META6]], type: [[META10]], flags: DIFlagArtificial, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: [[META0]])
; CHECK: [[DBG21]] = !DILocation(line: 186, column: 9, scope: [[DBG20]])
;.
